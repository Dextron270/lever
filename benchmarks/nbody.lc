# customized from the:
# https://github.com/cython/cython/blob/master/Demos/benchmarks/nbody.py


main = :
    offset_momentum()
    was = time()

    for _ in range(100)
        report_energy()
        advance(0.01, 20000)
        report_energy()

    now = time()
    print("took", now - was, "seconds")

PI = 3.14159265358979323
SOLAR_MASS = 4 * PI * PI
DAYS_PER_YEAR = 365.24

bodies = [
    :object()
        name = 'sun'
        position = vec3(0,0,0)
        velocity = vec3(0,0,0)
        mass = SOLAR_MASS
    , :object()
        name = 'jupiter'
        position = vec3(
            4.84143144246472090e+00,
            -1.16032004402742839e+00,
            -1.03622044471123109e-01
        )
        velocity = vec3(
            1.66007664274403694e-03 * DAYS_PER_YEAR,
            7.69901118419740425e-03 * DAYS_PER_YEAR,
            -6.90460016972063023e-05 * DAYS_PER_YEAR
        )
        mass = 9.54791938424326609e-04 * SOLAR_MASS
    , :object()
        name = 'uranus'
        position = vec3(1.28943695621391310e+01,
                -1.51111514016986312e+01,
                -2.23307578892655734e-01
        )
        velocity = vec3(2.96460137564761618e-03 * DAYS_PER_YEAR,
                2.37847173959480950e-03 * DAYS_PER_YEAR,
                -2.96589568540237556e-05 * DAYS_PER_YEAR
        )
        mass = 4.36624404335156298e-05 * SOLAR_MASS
    , :object()
        name = 'neptune'
        position = vec3(1.53796971148509165e+01,
                 -2.59193146099879641e+01,
                 1.79258772950371181e-01
        )
        velocity = vec3(2.68067772490389322e-03 * DAYS_PER_YEAR,
                 1.62824170038242295e-03 * DAYS_PER_YEAR,
                 -9.51592254519715870e-05 * DAYS_PER_YEAR
        )
        mass = 5.15138902046611451e-05 * SOLAR_MASS
    , :object()
        name = 'saturn'
        position = vec3(8.34336671824457987e+00,
                4.12479856412430479e+00,
                -4.03523417114321381e-01
        )
        velocity = vec3(-2.76742510726862411e-03 * DAYS_PER_YEAR,
                4.99852801234917238e-03 * DAYS_PER_YEAR,
                2.30417297573763929e-05 * DAYS_PER_YEAR
        )
        mass = 2.85885980666130812e-04 * SOLAR_MASS
]

advance = (dt, n):
    for i in range(n)
        for j in range(0, bodies.length-1)
            a = bodies[j]
            for k in range(j+1, bodies.length)
                b = bodies[k]
                delta = a.position - b.position
                mag = dt * pow(dot(delta, delta), -1.5)
                b1m = a.mass * mag
                b2m = b.mass * mag
                a.velocity -= delta * b2m
                b.velocity += delta * b1m
        for body in bodies
            body.position += dt * body.velocity

report_energy = :
    e = 0.0
    for j in range(0, bodies.length-1)
        a = bodies[j]
        for k in range(j, bodies.length)
            b = bodies[k]
            delta = a.position - b.position
            e -= (a.mass * b.mass) / length(delta)
    for body in bodies
        e += body.mass * dot(body.velocity, body.velocity) / 2
    return e

offset_momentum = :
    sun = bodies[0]
    offset = vec3(0, 0, 0)
    for body in bodies
        offset -= body.velocity * body.mass
    sun.velocity = offset / sun.mass
