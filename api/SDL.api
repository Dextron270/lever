(INIT_VIDEO      = 0x0020)
(INIT_EVERYTHING = 0xFFFF)
(Init         = long     SDL_Init         long)
(SetVideoMode = Surface* SDL_SetVideoMode int  int int int)
(Quit         = void     SDL_Quit)
(RELEASED = 0)
(PRESSED = 1)
(NOEVENT = 0)
(ACTIVEEVENT = 1)
(KEYDOWN = 2)
(KEYUP = 3)
(MOUSEMOTION = 4)
(MOUSEBUTTONDOWN = 5)
(MOUSEBUTTONUP = 6)
(JOYAXISMOTION = 7)
(JOYBALLMOTION = 8)
(JOYHATMOTION = 9)
(JOYBUTTONDOWN = 10)
(JOYBUTTONUP = 11)
(QUIT = 12)
(SYSWMEVENT = 13)
(EVENT_RESERVEDA = 14)
(EVENT_RESERVEDB = 15)
(VIDEORESIZE = 16)
(VIDEOEXPOSE = 17)
(EVENT_RESERVED2 = 18)
(EVENT_RESERVED3 = 19)
(EVENT_RESERVED4 = 20)
(EVENT_RESERVED5 = 21)
(EVENT_RESERVED6 = 22)
(EVENT_RESERVED7 = 23)
(USEREVENT = 24)
(NUMEVENTS = 32)
(ALLEVENTS = 0xffffffff)
(PumpEvents = void SDL_PumpEvents)
(ADDEVENT = 0)
(PEEKEVENT = 1)
(GETEVENT = 2)
(PeepEvents = int SDL_PeepEvents Event* int long uint)
(PollEvent = int SDL_PollEvent Event*)
(WaitEvent = int SDL_WaitEvent Event*)
(PushEvent = int SDL_PushEvent Event*)
(EventFilter = cfunc int Event*)
(SetEventFilter = void SDL_SetEventFilter EventFilter)
(QUERY = -1)
(IGNORE = 0)
(DISABLE = 0)
(ENABLE = 1)
(EventState = byte SDL_EventState byte int)
(Event = union
    (type = byte)
    (active = ActiveEvent)
	(key = KeyboardEvent)
	(motion = MouseMotionEvent)
	(button = MouseButtonEvent)
	(jaxis = JoyAxisEvent)
	(jball = JoyBallEvent)
	(jhat = JoyHatEvent)
	(jbutton = JoyButtonEvent)
	(resize = ResizeEvent)
	(expose = ExposeEvent)
	(quit = QuitEvent)
	(user = UserEvent)
	(syswm = SysWMEvent))

(ActiveEvent = struct
    (type = byte)
    (gain = byte)
    (state = byte))

(KeyboardEvent = struct
    (type = byte)
    (which = byte)
    (state = byte)
    (keysym = long))

(MouseMotionEvent = struct
    (type = byte)
    (which = byte)
    (state = byte)
    (x = ushort)
    (y = ushort)
    (xrel = short)
    (yrel = short))

(MouseButtonEvent = struct
    (type = byte)
    (which = byte)
    (state = byte)
    (x = ushort)
    (y = ushort))

(JoyAxisEvent = struct
    (type = byte)
    (which = byte)
    (axis = byte)
    (value = short))

(JoyBallEvent = struct
    (type = byte)
    (which = byte)
    (ball = byte)
    (xrel = short)
    (yrel = short))

(JoyHatEvent = struct
    (type = byte)
    (which = byte)
    (hat = byte)
    (value = byte))

(JoyButtonEvent = struct
    (type = byte)
    (which = byte)
    (button = byte)
    (state = byte))

(ResizeEvent = struct
    (type = byte)
    (w = int)
    (h = int))

(ExposeEvent = struct
    (type = byte))

(QuitEvent = struct
    (type = byte))

(UserEvent = struct
    (type = byte)
    (code = int)
    (data1 = void*)
    (data2 = void*))

(SysWMEvent = struct
    (type = byte)
    (msg = SysVMmsg*))

(SysVMmsg = opaque)

(Rect = struct
    (x = short)
    (y = short)
    (w = ushort)
    (h = ushort))

(Color = struct
    (r = byte)
    (g = byte)
    (b = byte))

(Palette = struct
    (ncolors = int)
    (colors = Color*))

(FillRect = int SDL_FillRect Surface* Rect* uint)
(Flip = int SDL_Flip Surface*)

(MapRGB = uint SDL_MapRGB PixelFormat* byte byte byte)
(MapRGBA = uint SDL_MapRGBA PixelFormat* byte byte byte byte)

(GL_SwapBuffers = void SDL_GL_SwapBuffers)

(WM_SetCaption = void WM_SetCaption cstring cstring)

(GL_SetAttribute = int SDL_GL_SetAttribute long int)
(GL_GetAttribute = int SDL_GL_GetAttribute long int*)

(GL_RED_SIZE = 0)
(GL_GREEN_SIZE = 1)
(GL_BLUE_SIZE = 2)
(GL_ALPHA_SIZE = 3)
(GL_BUFFER_SIZE = 4)
(GL_DOUBLEBUFFER = 5)
(GL_DEPTH_SIZE = 6)
(GL_STENCIL_SIZE = 7)
(GL_ACCUM_RED_SIZE = 8)
(GL_ACCUM_GREEN_SIZE = 9)
(GL_ACCUM_BLUE_SIZE = 10)
(GL_ACCUM_ALPHA_SIZE = 11)
(GL_STEREO = 12)
(GL_MULTISAMPLEBUFFERS = 13)
(GL_MULTISAMPLESAMPLES = 14)
(GL_ACCELERATED_VISUAL = 15)
(GL_SWAP_CONTROL = 16)

(SWSURFACE  = 0x00000000)
(HWSURFACE  = 0x00000001)
(ASYNCBLIT  = 0x00000004)
(ANYFORMAT  = 0x10000000)
(HWPALETTE  = 0x20000000)
(DOUBLEBUF  = 0x40000000)
(FULLSCREEN = 0x80000000)
(OPENGL     = 0x00000002)
(OPENGLBLIT = 0x0000000A)
(RESIZABLE  = 0x00000010)
(NOFRAME    = 0x00000020)

(Surface = struct
    (flags = uint)
    (format = PixelFormat*)
    (w = int)
    (h = int)
    (pitch = ushort)
    (pixels = void*)
    (offset = int)
    (hwdata = void*)
    (clip_rect = Rect)
    (unused1 = uint)
    (locked = uint)
    (map = BlitMap*)
    (format_version = uint)
    (refcount = int))

(PixelFormat = opaque)
(BlitMap = opaque)

(GetError = cstring SDL_GetError)
