(= sdl (ffi.dlopen "libSDL.so" (ffi.api (read-file "api/SDL.api"))))

(sdl.Init sdl.INIT_EVERYTHING)
(sdl.EnableUNICODE 1)
(sdl.ShowCursor 0)
(= screen (sdl.SetVideoMode 320 240 32 (| sdl.HWSURFACE sdl.DOUBLEBUF)))

(= rect (ffi.malloc sdl.Rect))
(= paint-rect (func (x y w h  r g b)
    (.x= rect x)
    (.y= rect y)
    (.w= rect w)
    (.h= rect h)
    (sdl.FillRect screen rect (sdl.MapRGB screen.format r g b))))


(= new-rect (func (x y w h)
    (= rect (ffi.malloc sdl.Rect))
    (.x= rect x)
    (.y= rect y)
    (.w= rect w)
    (.h= rect h)
    (return rect)))

(= score 0)
(= b-x 50)
(= b-y 50)
(= b-xv 1)
(= b-yv 1)

(= l-y 0)
(= r-y 190)
(= l-up   false)
(= l-down false)
(= r-up   false)
(= r-down false)

(= keyboard-event (func (key)
    (= keysym key.keysym)
    (:= active true)
    (cond
    ((== keysym.scancode 9) (:= running false))
    ((== keysym.scancode 111) (:= l-up   (== 1 key.state)))
    ((== keysym.scancode 116) (:= l-down (== 1 key.state)))
    ((== keysym.scancode 65)  (:= r-up   (== 1 key.state)))
    ((== keysym.scancode 64)  (:= r-down (== 1 key.state)))
    (else
        (print key.state key.keysym.scancode)))))

(= event (ffi.malloc sdl.Event))
(= running true)
(= active  false)
(= reset-round false)
(= was (= now (sdl.GetTicks)))
(while running
    (cond 
    ((== 1 (sdl.PollEvent event))
        (cond
        ((== event.type sdl.QUIT)
            (= running false))
        ((== event.type sdl.KEYDOWN) (keyboard-event event.key))
        ((== event.type sdl.KEYUP)   (keyboard-event event.key)))))

    (= now (sdl.GetTicks))
    (= dt (- now was))
    (sdl.Delay (max (- 5 dt) 0))
    (= was (sdl.GetTicks))
    
    (cond
    ((and reset-round (or (< score -8) (< 8 score)))
        (sdl.Delay 1500)
        (= running false))
    (reset-round
        (sdl.Delay 500)
        (= reset-round false)
        (= b-x (- (/ screen.w 2) 5))
        (= b-y (- (/ screen.h 2) 5))))

    (cond
    (l-up   (= l-y (max 0   (- l-y 1))))
    (l-down (= l-y (min 190 (+ l-y 1))))
    (r-up   (= r-y (max 0   (- r-y 1))))
    (r-down (= r-y (min 190 (+ r-y 1)))))

    (cond (active
        (= b-x (+ b-x b-xv))
        (= b-y (+ b-y b-yv))))

    (cond
    ((and (>= b-x 300) (and (< (- r-y 10) b-y) (< b-y (+ r-y 40))))
        (= b-xv -1))
    ((and (<= b-x  10) (and (< (- l-y 10) b-y) (< b-y (+ l-y 40))))
        (= b-xv  1))
    ((>= b-x 310)
        (= reset-round true)
        (= b-xv -1)
        (= score (- score 1)))
    ((<= b-x 0)
        (= reset-round true)
        (= b-xv 1)
        (= score (+ score 1))))
    (cond
    ((>= b-y 220) (= b-yv -1))
    ((<= b-y 0)   (= b-yv  1)))

    (paint-rect 0 0 screen.w screen.h 0 0 0)
    (paint-rect (/ screen.w 2) 0 1 screen.h 10 10 10)

    (= i score)
    (while (> i 0)
        (paint-rect (+ (* i 10) (/ screen.w 2)) 10 5 5 100 185 100)
        (= i (- i 1)))
    (= i score)
    (while (< i 0)
        (paint-rect (+ (* i 10) (/ screen.w 2)) 10 5 5 100 185 100)
        (= i (+ i 1)))

    (paint-rect 0   l-y 10 50  10  185 10)
    (paint-rect 310 r-y 10 50  10  185 10)
    (paint-rect b-x b-y 10 10  185 185 10)


    (sdl.Flip screen))

(ffi.free event)
(sdl.Quit)
