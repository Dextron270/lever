import ffi

required_extensions = (extensions):
    enabledExtensionNames = ["VK_KHR_surface"]
    if "VK_KHR_xcb_surface" in extensions
        enabledExtensionNames.append("VK_KHR_xcb_surface")
    else
        raise Exception("The app lacks swapchain instantiator for your platform.")
    return enabledExtensionNames

create_surface = (vulkan, sdl, instance, win):
    surface = ffi.automem(vulkan.vk.SurfaceKHR)
    info = ffi.automem(sdl.SysWMinfo)
    info.version = {major=2, minor=0, patch=2}
    if sdl.GetWindowWMInfo(win, info) == 0
        raise Exception("GetWindowWMInfo failed")

    if info.subsystem == sdl.SYSWM_X11
        VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000
        vulkan.vk.createXcbSurfaceKHR(instance, {
            sType = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR
            connection = info.info.x11.display
            window = ffi.cast(info.info.x11.window, ffi.voidp)
        }, null, surface)
    else
        raise Exception("The app lacks swapchain instantiator for your platform.")
    return vulkan.Surface(instance, surface.to)
