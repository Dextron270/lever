import api, ffi, platform
from ffi import automem

if platform.name == "win32"
    sdl = ffi.library("SDL2.dll",
        api.open_nobind("libSDL2", {}))
else
    sdl = api.library("libSDL2")
gl = api.library("libGL", sdl.GL_GetProcAddress)

run_sdl = (options):
    assert sdl.Init(sdl.INIT_VIDEO) == 0
        sdl.GetError()

    sdl.GL_SetAttribute(sdl.GL_FRAMEBUFFER_SRGB_CAPABLE, 1)
    sdl.GL_SetAttribute(sdl.GL_CONTEXT_MAJOR_VERSION, 4)
    sdl.GL_SetAttribute(sdl.GL_CONTEXT_MINOR_VERSION, 4)

    sdl.GL_SetAttribute(sdl.GL_DOUBLEBUFFER, 1)
    sdl.GL_SetAttribute(sdl.GL_DEPTH_SIZE, 24)
    win = sdl.CreateWindow(options.name,
        0x1FFF0000,
        0x1FFF0000,
        options.resolution.x,
        options.resolution.y,
        sdl.WINDOW_OPENGL | sdl.WINDOW_SHOWN)
    assert win, sdl.GetError()

    ctx = sdl.GL_CreateContext(win)
    assert ctx, sdl.GetError()

    options.init(gl)

    try
        event = automem(sdl.Event)
        running = true
        while running
            while sdl.PollEvent(event) != 0
                if event.type == sdl.QUIT
                    running = false
                    return
            options.render(gl)
            sdl.GL_SwapWindow(win)
    finally
        sdl.GL_DeleteContext(ctx)
        sdl.DestroyWindow(win)
        sdl.Quit()
